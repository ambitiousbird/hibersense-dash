{"ast":null,"code":"var _jsxFileName = \"/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/Rooms/Room.js\";\nimport React, { Component } from 'react';\nimport LineChart from '../LineChart/LineChart';\nimport { connect } from 'react-redux';\nimport { makeData } from '../Utility/DataHandling';\nimport { changeBathroomTemp, changeLivingroomTemp, changeKitchenTemp, changeBedroomTemp } from '../store/actions/temperatureSettingAction';\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      kitchenData: {},\n      bedroomData: {},\n      livingroomData: {},\n      bathroomData: {},\n      cooling: false,\n      heating: false,\n      idle: false\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          roomName = _this$props.roomName,\n          kitchenTemperature = _this$props.kitchenTemperature,\n          livingroomTemperature = _this$props.livingroomTemperature,\n          bathroomTemperature = _this$props.bathroomTemperature,\n          bedroomTemperature = _this$props.bedroomTemperature,\n          kitchenCurrentTemp = _this$props.kitchenCurrentTemp,\n          bedroomCurrentTemp = _this$props.bedroomCurrentTemp,\n          bathroomCurrentTemp = _this$props.bathroomCurrentTemp,\n          livingroomCurrentTemp = _this$props.livingroomCurrentTemp,\n          changeBathroomTemp = _this$props.changeBathroomTemp,\n          changeLivingroomTemp = _this$props.changeLivingroomTemp,\n          changeKitchenTemp = _this$props.changeKitchenTemp,\n          changeBedroomTemp = _this$props.changeBedroomTemp; // console.log(kitchenTemperature);\n\n    var tempTarget = function () {\n      if (roomName === \"Kitchen\") return kitchenTemperature;\n      if (roomName === \"Livingroom\") return livingroomTemperature;\n      if (roomName === \"Bedroom\") return bedroomTemperature;\n      if (roomName === \"Bathroom\") return bathroomTemperature;\n    }(); // console.log(tempTarget);\n\n\n    tempTarget = typeof tempTarget === \"number\" ? tempTarget : tempTarget.temperature;\n\n    var currentTemp = function () {\n      if (roomName === \"Kitchen\") return kitchenCurrentTemp;\n      if (roomName === \"Livingroom\") return livingroomCurrentTemp;\n      if (roomName === \"Bedroom\") return bedroomCurrentTemp;\n      if (roomName === \"Bathroom\") return bathroomCurrentTemp;\n    }();\n\n    currentTemp = typeof currentTemp === \"number\" ? currentTemp : currentTemp.temperature; // console.log('currentTemp',currentTemp);\n\n    const tempDiff = tempTarget - currentTemp; // console.log(tempDiff);\n    //set room status: cooling/heating/idle\n\n    if (tempDiff > 0) {\n      this.setState({\n        heating: true,\n        cooling: false,\n        idle: false\n      });\n    } else if (tempDiff < 0) {\n      this.setState({\n        heating: false,\n        cooling: true,\n        idle: false\n      });\n    } else {\n      this.setState({\n        heating: false,\n        cooling: false,\n        idle: true\n      });\n    }\n\n    ;\n    console.log(this.state);\n    this.changeTempInterval = setInterval(() => {\n      if (roomName === \"Kitchen\") {\n        currentTemp = Math.round((currentTemp + tempDiff / 10) * 10) / 10;\n        changeKitchenTemp(currentTemp);\n        this.setState({\n          kitchenData: makeData(currentTemp, 0.2)\n        });\n      }\n\n      if (roomName === \"Livingroom\") changeLivingroomTemp(currentTemp + tempDiff / 10);\n      if (roomName === \"Bedroom\") changeBedroomTemp(currentTemp + tempDiff / 10);\n      if (roomName === \"Bathroom\") changeBathroomTemp(currentTemp + tempDiff / 10);\n      tempTarget = Math.round(tempTarget * 10) / 10;\n\n      if (currentTemp === tempTarget) {\n        clearInterval(this.changeTempInterval);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.changeTempInterval);\n  }\n\n  render() {\n    const roomName = this.props.roomName;\n    const _this$state = this.state,\n          kitchenData = _this$state.kitchenData,\n          bedroomData = _this$state.bedroomData,\n          livingroomData = _this$state.livingroomData,\n          bathroomData = _this$state.bathroomData,\n          cooling = _this$state.cooling,\n          heating = _this$state.heating,\n          idle = _this$state.idle;\n\n    var data = function () {\n      if (roomName === \"Kitchen\") return kitchenData;\n      if (roomName === \"Livingroom\") return livingroomData;\n      if (roomName === \"Bedroom\") return bedroomData;\n      if (roomName === \"Bathroom\") return bathroomData;\n    }();\n\n    return React.createElement(\"div\", {\n      className: \"room\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, roomName), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Temperature: 26\\xB0F \"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Status:cooling\"), React.createElement(LineChart, {\n      width: 600,\n      height: 400,\n      title: 'Current Temperature',\n      data: data,\n      range: [60, 85],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    kitchenTemperature: state.temperature.kitchenTemperature,\n    livingroomTemperature: state.temperature.livingroomTemperature,\n    bedroomTemperature: state.temperature.bedroomTemperature,\n    bathroomTemperature: state.temperature.bathroomTemperature,\n    livingroomCurrentTemp: state.temperature.livingroomCurrentTemp,\n    bedroomCurrentTemp: state.temperature.bedroomCurrentTemp,\n    bathroomCurrentTemp: state.temperature.bathroomCurrentTemp,\n    kitchenCurrentTemp: state.temperature.kitchenCurrentTemp\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeBathroomTemp,\n  changeLivingroomTemp,\n  changeKitchenTemp,\n  changeBedroomTemp\n})(Room);","map":{"version":3,"sources":["/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/Rooms/Room.js"],"names":["React","Component","LineChart","connect","makeData","changeBathroomTemp","changeLivingroomTemp","changeKitchenTemp","changeBedroomTemp","Room","constructor","props","state","kitchenData","bedroomData","livingroomData","bathroomData","cooling","heating","idle","componentDidMount","roomName","kitchenTemperature","livingroomTemperature","bathroomTemperature","bedroomTemperature","kitchenCurrentTemp","bedroomCurrentTemp","bathroomCurrentTemp","livingroomCurrentTemp","tempTarget","temperature","currentTemp","tempDiff","setState","console","log","changeTempInterval","setInterval","Math","round","clearInterval","componentWillUnmount","render","data","mapStateToProps"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport LineChart from '../LineChart/LineChart';\nimport {connect} from 'react-redux';\nimport {makeData} from '../Utility/DataHandling';\nimport {changeBathroomTemp, changeLivingroomTemp,changeKitchenTemp,changeBedroomTemp} from '../store/actions/temperatureSettingAction';\n\nclass Room extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      kitchenData:{},\n      bedroomData:{},\n      livingroomData:{},\n      bathroomData:{},\n      cooling:false,\n      heating:false,\n      idle:false\n    }\n  }\n\n  \n  componentDidMount(){\n    const {\n      roomName, \n      kitchenTemperature,\n      livingroomTemperature,\n      bathroomTemperature,\n      bedroomTemperature,\n\n      kitchenCurrentTemp,\n      bedroomCurrentTemp,\n      bathroomCurrentTemp,\n      livingroomCurrentTemp,\n\n      changeBathroomTemp, \n      changeLivingroomTemp,\n      changeKitchenTemp,\n      changeBedroomTemp\n    \n    } = this.props;\n\n    // console.log(kitchenTemperature);\n\n    var tempTarget =(function(){\n      if(roomName===\"Kitchen\") return kitchenTemperature;\n      if(roomName===\"Livingroom\") return livingroomTemperature;\n      if(roomName===\"Bedroom\") return bedroomTemperature;\n      if(roomName===\"Bathroom\")return bathroomTemperature;\n    })();\n    // console.log(tempTarget);\n\n    tempTarget = typeof tempTarget === \"number\"? tempTarget: tempTarget.temperature;\n\n    var currentTemp =(function(){\n      if(roomName===\"Kitchen\") return kitchenCurrentTemp;\n      if(roomName===\"Livingroom\") return livingroomCurrentTemp;\n      if(roomName===\"Bedroom\") return bedroomCurrentTemp;\n      if(roomName===\"Bathroom\")return bathroomCurrentTemp;\n    })();\n\n\n    currentTemp = typeof currentTemp === \"number\"? currentTemp: currentTemp.temperature;\n    // console.log('currentTemp',currentTemp);\n    const tempDiff = tempTarget - currentTemp;\n\n    // console.log(tempDiff);\n    //set room status: cooling/heating/idle\n    if(tempDiff>0){\n      this.setState({heating: true, cooling:false, idle:false})\n    }else if(tempDiff <0){\n      this.setState({heating: false, cooling:true,idle:false})\n    }else{\n      this.setState({heating: false, cooling:false,idle:true})\n    };\n\n    console.log(this.state);\n    this.changeTempInterval = setInterval(()=>{\n      if(roomName===\"Kitchen\") {\n        currentTemp=Math.round((currentTemp+tempDiff/10)*10)/10;\n        changeKitchenTemp(currentTemp);\n        this.setState({\n          kitchenData:makeData(currentTemp,0.2)\n        })\n      }\n      if(roomName===\"Livingroom\") changeLivingroomTemp(currentTemp+tempDiff/10);\n      if(roomName===\"Bedroom\") changeBedroomTemp(currentTemp+tempDiff/10);\n      if(roomName===\"Bathroom\") changeBathroomTemp(currentTemp+tempDiff/10);\n\n      tempTarget = Math.round(tempTarget*10)/10;\n      if(currentTemp === tempTarget){\n          clearInterval(this.changeTempInterval);\n      }\n    },1000)\n\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.changeTempInterval);\n  }\n\n\n\n\n  render() {\n    const {roomName} =this.props;\n    const {\n      kitchenData,\n      bedroomData,\n      livingroomData,\n      bathroomData,\n      cooling,\n      heating,\n      idle\n    } = this.state;\n    var data =(function(){\n      if(roomName===\"Kitchen\") return kitchenData;\n      if(roomName===\"Livingroom\") return livingroomData;\n      if(roomName===\"Bedroom\") return bedroomData;\n      if(roomName===\"Bathroom\")return bathroomData;\n    })();\n\n    return (\n      <div className='room'>\n          <h1>{roomName}</h1>\n          <h5>Temperature: 26°F </h5>\n          <h6>Status:cooling</h6>\n\n          <LineChart \n              width={600} \n              height={400}\n              title={'Current Temperature'}\n              data = {data}\n              range={[60,85]}\n          />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps=state=>{\n  console.log(state);\n  return{\n    kitchenTemperature: state.temperature.kitchenTemperature,\n    livingroomTemperature: state.temperature.livingroomTemperature,\n    bedroomTemperature: state.temperature.bedroomTemperature,\n    bathroomTemperature: state.temperature.bathroomTemperature,\n\n    livingroomCurrentTemp:state.temperature.livingroomCurrentTemp,\n    bedroomCurrentTemp:state.temperature.bedroomCurrentTemp,\n    bathroomCurrentTemp:state.temperature.bathroomCurrentTemp,\n    kitchenCurrentTemp:state.temperature.kitchenCurrentTemp,\n  }\n}\n\nexport default connect(mapStateToProps, {\n  changeBathroomTemp, \n  changeLivingroomTemp,\n  changeKitchenTemp,\n  changeBedroomTemp})(Room);\n"]},"metadata":{},"sourceType":"module"}