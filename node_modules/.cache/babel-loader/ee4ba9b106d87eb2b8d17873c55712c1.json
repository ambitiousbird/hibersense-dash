{"ast":null,"code":"var _jsxFileName = \"/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/LineChart/LineChart.js\";\nimport React, { Component } from \"react\";\nimport { loadAllData } from \"../Utility/DataHandling\";\nimport PlotChart from \"./PlotChart\";\nimport './linechart.css';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      body_width: document.body.clientWidth\n    };\n    window.addEventListener(\"resize\", this.resize().bind(this));\n  }\n\n  componentWillMount() {\n    this.load();\n  }\n\n  resize() {\n    let t;\n    return event => {\n      if (t !== false) {\n        clearTimeout(t);\n      }\n\n      t = setTimeout(() => {\n        const state = Object.assign(this.state, {\n          body_width: document.body.clientWidth\n        });\n        this.setState(state);\n      }, 100);\n    };\n  }\n\n  load() {\n    loadAllData(this.loaded.bind(this)); // loadAllData(2,0.5);\n\n    setTimeout(() => {\n      this.load();\n    }, 1000);\n  }\n\n  loaded(data) {\n    this.setState({\n      data: data\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          width = _this$props.width,\n          height = _this$props.height,\n          title = _this$props.title,\n          range = _this$props.range;\n    return React.createElement(\"div\", {\n      className: \"LineChartComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, title), this.state.data ? React.createElement(PlotChart, {\n      data: this.state.data,\n      width: width,\n      height: height,\n      xFn: d => d.date,\n      yFn: d => d.value,\n      yDomain: range,\n      margin: {\n        top: 20,\n        left: 40,\n        bottom: 20,\n        right: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Data Not found.\"));\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/LineChart/LineChart.js"],"names":["React","Component","loadAllData","PlotChart","LineChart","constructor","props","state","data","body_width","document","body","clientWidth","window","addEventListener","resize","bind","componentWillMount","load","t","event","clearTimeout","setTimeout","Object","assign","setState","loaded","render","width","height","title","range","textAlign","d","date","value","top","left","bottom","right"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,UAAU,EAAEC,QAAQ,CAACC,IAAT,CAAcC;AAFf,KAAb;AAKAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,MAAL,GAAcC,IAAd,CAAmB,IAAnB,CAAlC;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,IAAL;AACD;;AAEDH,EAAAA,MAAM,GAAG;AACP,QAAII,CAAJ;AAEA,WAAOC,KAAK,IAAI;AACd,UAAID,CAAC,KAAK,KAAV,EAAiB;AACfE,QAAAA,YAAY,CAACF,CAAD,CAAZ;AACD;;AACDA,MAAAA,CAAC,GAAGG,UAAU,CAAC,MAAM;AACnB,cAAMf,KAAK,GAAGgB,MAAM,CAACC,MAAP,CAAc,KAAKjB,KAAnB,EAA0B;AACtCE,UAAAA,UAAU,EAAEC,QAAQ,CAACC,IAAT,CAAcC;AADY,SAA1B,CAAd;AAGA,aAAKa,QAAL,CAAclB,KAAd;AACD,OALa,EAKX,GALW,CAAd;AAMD,KAVD;AAWD;;AAEDW,EAAAA,IAAI,GAAG;AACLhB,IAAAA,WAAW,CAAC,KAAKwB,MAAL,CAAYV,IAAZ,CAAiB,IAAjB,CAAD,CAAX,CADK,CAEL;;AACAM,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKJ,IAAL;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;;AAEDQ,EAAAA,MAAM,CAAClB,IAAD,EAAO;AACX,SAAKiB,QAAL,CAAc;AAAEjB,MAAAA,IAAI,EAAEA;AAAR,KAAd;AACD;;AAEDmB,EAAAA,MAAM,GAAG;AAAA,wBAC+B,KAAKrB,KADpC;AAAA,UACAsB,KADA,eACAA,KADA;AAAA,UACOC,MADP,eACOA,MADP;AAAA,UACeC,KADf,eACeA,KADf;AAAA,UACsBC,KADtB,eACsBA,KADtB;AAEP,WACE;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCF,KAAlC,CADF,EAEG,KAAKvB,KAAL,CAAWC,IAAX,GACC,oBAAC,SAAD;AAEE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFnB;AAGE,MAAA,KAAK,EAAEoB,KAHT;AAIE,MAAA,MAAM,EAAEC,MAJV;AAKE,MAAA,GAAG,EAAEI,CAAC,IAAIA,CAAC,CAACC,IALd;AAME,MAAA,GAAG,EAAED,CAAC,IAAIA,CAAC,CAACE,KANd;AAOE,MAAA,OAAO,EAAEJ,KAPX;AAQE,MAAA,MAAM,EAAE;AAAEK,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,IAAI,EAAE,EAAjB;AAAqBC,QAAAA,MAAM,EAAE,EAA7B;AAAiCC,QAAAA,KAAK,EAAE;AAAxC,OARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAdJ,CADF;AAmBD;;AAjE+B;;AAmElC,eAAenC,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { loadAllData } from \"../Utility/DataHandling\";\nimport PlotChart from \"./PlotChart\";\nimport './linechart.css';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: null,\n      body_width: document.body.clientWidth\n    };\n\n    window.addEventListener(\"resize\", this.resize().bind(this));\n  }\n\n  componentWillMount() {\n    this.load();\n  }\n\n  resize() {\n    let t;\n\n    return event => {\n      if (t !== false) {\n        clearTimeout(t);\n      }\n      t = setTimeout(() => {\n        const state = Object.assign(this.state, {\n          body_width: document.body.clientWidth\n        });\n        this.setState(state);\n      }, 100);\n    };\n  }\n\n  load() {\n    loadAllData(this.loaded.bind(this));\n    // loadAllData(2,0.5);\n    setTimeout(() => {\n      this.load();\n    }, 1000);\n  }\n\n  loaded(data) {\n    this.setState({ data: data });\n  }\n\n  render() {\n    const {width, height, title, range} = this.props;\n    return (\n      <div  className=\"LineChartComponent\">\n        <h3 style={{textAlign:\"center\"}}>{title}</h3>\n        {this.state.data ? (\n          <PlotChart\n           \n            data={this.state.data}\n            width={width}\n            height={height}\n            xFn={d => d.date}\n            yFn={d => d.value}\n            yDomain={range}\n            margin={{ top: 20, left: 40, bottom: 20, right: 20 }}\n          />\n        ) : (\n          <p>Data Not found.</p>\n        )}\n      </div>\n    );\n  }\n}\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}