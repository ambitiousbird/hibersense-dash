{"ast":null,"code":"var _jsxFileName = \"/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/LineChart/LineChart.js\";\nimport React, { Component } from \"react\";\nimport * as d3 from \"d3\";\nimport { loadAllData } from \"./DataHandling\";\nimport PlotChart from \"./PlotChart\";\nimport './linechart.css';\n\nclass LineChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n      body_width: document.body.clientWidth\n    };\n    window.addEventListener(\"resize\", this.resize().bind(this));\n  }\n\n  componentWillMount() {\n    this.load();\n  }\n\n  resize() {\n    let t;\n    return event => {\n      if (t !== false) {\n        clearTimeout(t);\n      }\n\n      t = setTimeout(() => {\n        const state = Object.assign(this.state, {\n          body_width: document.body.clientWidth\n        });\n        this.setState(state);\n      }, 100);\n    };\n  }\n\n  load() {\n    loadAllData(this.loaded.bind(this));\n    setTimeout(() => {\n      this.load();\n    }, 1000);\n  }\n\n  loaded(data) {\n    this.setState({\n      data: data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.data ? React.createElement(PlotChart, {\n      className: \"LineChartComponet\",\n      data: this.state.data,\n      width: this.state.body_width,\n      height: 430,\n      xFn: d => d.date,\n      yFn: d => d.value,\n      yDomain: [0, 400],\n      margin: {\n        top: 20,\n        left: 40,\n        bottom: 20,\n        right: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Not found Data.\"));\n  }\n\n}\n\nexport default LineChart;","map":{"version":3,"sources":["/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/LineChart/LineChart.js"],"names":["React","Component","d3","loadAllData","PlotChart","LineChart","constructor","state","data","body_width","document","body","clientWidth","window","addEventListener","resize","bind","componentWillMount","load","t","event","clearTimeout","setTimeout","Object","assign","setState","loaded","render","d","date","value","top","left","bottom","right"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,UAAU,EAAEC,QAAQ,CAACC,IAAT,CAAcC;AAFf,KAAb;AAKAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,MAAL,GAAcC,IAAd,CAAmB,IAAnB,CAAlC;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,IAAL;AACD;;AAEDH,EAAAA,MAAM,GAAG;AACP,QAAII,CAAJ;AAEA,WAAOC,KAAK,IAAI;AACd,UAAID,CAAC,KAAK,KAAV,EAAiB;AACfE,QAAAA,YAAY,CAACF,CAAD,CAAZ;AACD;;AACDA,MAAAA,CAAC,GAAGG,UAAU,CAAC,MAAM;AACnB,cAAMf,KAAK,GAAGgB,MAAM,CAACC,MAAP,CAAc,KAAKjB,KAAnB,EAA0B;AACtCE,UAAAA,UAAU,EAAEC,QAAQ,CAACC,IAAT,CAAcC;AADY,SAA1B,CAAd;AAGA,aAAKa,QAAL,CAAclB,KAAd;AACD,OALa,EAKX,GALW,CAAd;AAMD,KAVD;AAWD;;AAEDW,EAAAA,IAAI,GAAG;AACLf,IAAAA,WAAW,CAAC,KAAKuB,MAAL,CAAYV,IAAZ,CAAiB,IAAjB,CAAD,CAAX;AAEAM,IAAAA,UAAU,CAAC,MAAM;AACf,WAAKJ,IAAL;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;;AAEDQ,EAAAA,MAAM,CAAClB,IAAD,EAAO;AACX,SAAKiB,QAAL,CAAc;AAAEjB,MAAAA,IAAI,EAAEA;AAAR,KAAd;AACD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKpB,KAAL,CAAWC,IAAX,GACC,oBAAC,SAAD;AACE,MAAA,SAAS,EAAC,mBADZ;AAEE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFnB;AAGE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,UAHpB;AAIE,MAAA,MAAM,EAAE,GAJV;AAKE,MAAA,GAAG,EAAEmB,CAAC,IAAIA,CAAC,CAACC,IALd;AAME,MAAA,GAAG,EAAED,CAAC,IAAIA,CAAC,CAACE,KANd;AAOE,MAAA,OAAO,EAAE,CAAC,CAAD,EAAI,GAAJ,CAPX;AAQE,MAAA,MAAM,EAAE;AAAEC,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,IAAI,EAAE,EAAjB;AAAqBC,QAAAA,MAAM,EAAE,EAA7B;AAAiCC,QAAAA,KAAK,EAAE;AAAxC,OARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAbJ,CADF;AAkBD;;AA/D+B;;AAiElC,eAAe7B,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as d3 from \"d3\";\n\nimport { loadAllData } from \"./DataHandling\";\nimport PlotChart from \"./PlotChart\";\nimport './linechart.css';\n\nclass LineChart extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: null,\n      body_width: document.body.clientWidth\n    };\n\n    window.addEventListener(\"resize\", this.resize().bind(this));\n  }\n\n  componentWillMount() {\n    this.load();\n  }\n\n  resize() {\n    let t;\n\n    return event => {\n      if (t !== false) {\n        clearTimeout(t);\n      }\n      t = setTimeout(() => {\n        const state = Object.assign(this.state, {\n          body_width: document.body.clientWidth\n        });\n        this.setState(state);\n      }, 100);\n    };\n  }\n\n  load() {\n    loadAllData(this.loaded.bind(this));\n\n    setTimeout(() => {\n      this.load();\n    }, 1000);\n  }\n\n  loaded(data) {\n    this.setState({ data: data });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.data ? (\n          <PlotChart\n            className=\"LineChartComponet\"\n            data={this.state.data}\n            width={this.state.body_width}\n            height={430}\n            xFn={d => d.date}\n            yFn={d => d.value}\n            yDomain={[0, 400]}\n            margin={{ top: 20, left: 40, bottom: 20, right: 20 }}\n          />\n        ) : (\n          <p>Not found Data.</p>\n        )}\n      </div>\n    );\n  }\n}\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}