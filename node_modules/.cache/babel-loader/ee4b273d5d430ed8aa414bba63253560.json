{"ast":null,"code":"var _jsxFileName = \"/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/DonutChart/DonutChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { Donut3D_transition, Donut3D_draw } from './Donut3D';\nimport './donutchart.css';\nconst energyData = [{\n  label: \"Kitchen\",\n  color: \"#3366CC\",\n  usuage: 0\n}, {\n  label: \"Bathroom\",\n  color: \"#990099\",\n  usuage: 0\n}, {\n  label: \"Bedroom\",\n  color: \"#FF9900\",\n  usuage: 0\n}, {\n  label: \"Livingroom\",\n  color: \"#109618\",\n  usuage: 0\n}]; // const changeData=()=>{\n//     Donut3D_transition(\"energyDonut\", randomData(), 130, 100, 30, 0.4);\n//     // Donut3D_transition(\"quotesDonut\", randomData(), 130, 100, 30, 0);\n// }\n\nconst randomData = () => {\n  return energyData.map(function (d) {\n    return {\n      label: d.label,\n      value: 1000 * Math.random(),\n      color: d.color\n    };\n  });\n};\n\nexport default class componentName extends Component {\n  constructor(props) {\n    super();\n  }\n\n  componentDidMount() {\n    energyData.forEach(i => {\n      if (i.label === \"Kitchen\") i.usuage = this.props.kitchenUsuage;\n      if (i.label === \"Bathroom\") i.usuage = this.props.bathroomUsuage;\n      if (i.label === \"Bedroom\") i.usuage = this.props.bedroomUsuage;\n      if (i.label === \"Livingroom\") i.usuage = this.props.livingroomUsuage;\n    });\n    console.log(1000 * Math.random());\n    console.log(\"checking energy data...\", energyData);\n    console.log(\"random data: \", 1000 * Math.random());\n    var svg = d3.select(\"#pieChart\").append(\"svg\").attr(\"width\", 400).attr(\"height\", 300);\n    svg.append(\"g\").attr(\"id\", \"energyDonut\"); // svg.append(\"g\").attr(\"id\",\"quotesDonut\");\n\n    Donut3D_draw(\"energyDonut\", randomData(), 150, 150, 130, 100, 30, 0.4); // Donut3D_draw(\"quotesDonut\", randomData(), 450, 150, 130, 100, 30, 0);\n\n    this.transition = setInterval(() => Donut3D_transition(\"energyDonut\", randomData(), 130, 100, 30, 0), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.transition);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"energy-consumption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        paddingRight: \"200px\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Energy usage distribution\"), React.createElement(\"div\", {\n      id: \"pieChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/DonutChart/DonutChart.js"],"names":["React","Component","d3","Donut3D_transition","Donut3D_draw","energyData","label","color","usuage","randomData","map","d","value","Math","random","componentName","constructor","props","componentDidMount","forEach","i","kitchenUsuage","bathroomUsuage","bedroomUsuage","livingroomUsuage","console","log","svg","select","append","attr","transition","setInterval","componentWillUnmount","clearInterval","render","paddingRight","textAlign"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport {Donut3D_transition, Donut3D_draw} from './Donut3D';\nimport './donutchart.css';\n\nconst energyData=[\n\t{label:\"Kitchen\", color:\"#3366CC\",usuage:0},\n\t{label:\"Bathroom\", color:\"#990099\",usuage:0},\n\t{label:\"Bedroom\", color:\"#FF9900\",usuage:0},\n\t{label:\"Livingroom\", color:\"#109618\",usuage:0},\n];\n\n// const changeData=()=>{\n//     Donut3D_transition(\"energyDonut\", randomData(), 130, 100, 30, 0.4);\n//     // Donut3D_transition(\"quotesDonut\", randomData(), 130, 100, 30, 0);\n// }\n\nconst randomData=()=>{\n    return energyData.map(function(d){ \n        return {label:d.label, \n            value:1000*Math.random(), \n            color:d.color};});\n}\n\nexport default class componentName extends Component {\n    constructor(props){\n        super();\n    }\n\n\n\n    \n    componentDidMount() {\n\n        energyData.forEach(i=>{\n            if(i.label===\"Kitchen\") i.usuage =this.props.kitchenUsuage;\n            if(i.label===\"Bathroom\") i.usuage =this.props.bathroomUsuage;\n            if(i.label===\"Bedroom\") i.usuage =this.props.bedroomUsuage;\n            if(i.label===\"Livingroom\") i.usuage =this.props.livingroomUsuage;\n        });\n        console.log(1000*Math.random());\n        console.log(\"checking energy data...\",energyData);\n        console.log(\"random data: \",1000*Math.random())\n        var svg = d3.select(\"#pieChart\").append(\"svg\").attr(\"width\",400).attr(\"height\",300);\n    \n        svg.append(\"g\").attr(\"id\",\"energyDonut\");\n        // svg.append(\"g\").attr(\"id\",\"quotesDonut\");\n        Donut3D_draw(\"energyDonut\", randomData(), 150, 150, 130, 100, 30, 0.4);\n        // Donut3D_draw(\"quotesDonut\", randomData(), 450, 150, 130, 100, 30, 0);\n        this.transition = setInterval(\n            ()=>Donut3D_transition(\"energyDonut\", randomData(), 130, 100, 30, 0),\n            1000\n        )\n    };\n\n    componentWillUnmount(){\n        clearInterval(this.transition);\n    }\n\n    render() {\n      return (\n        <div className='energy-consumption'>\n            <h3 style={{paddingRight:\"200px\",textAlign:\"center\"}}>Energy usage distribution</h3>\n            {/* <button onClick={changeData}>Change Data</button> */}\n            <div id='pieChart'></div>\n        </div>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}