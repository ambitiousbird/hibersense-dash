{"ast":null,"code":"var _jsxFileName = \"/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/Summary/Summary.js\";\nimport React, { Component } from 'react';\nimport LineChart from '../LineChart/LineChart';\nimport DonutChart from '../DonutChart/DonutChart';\nimport { makeData } from '../Utility/DataHandling';\nimport './summary.css';\nimport { SettingsAlert } from '../Utility/Alert';\nimport { connect } from 'http2';\n\nclass Summary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      showWarning: false\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      data: makeData(1.5, 0.2)\n    });\n    this.loadData = setInterval(() => {\n      const data = makeData(1.5, 0.2);\n      this.setState({\n        data: data\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.loadData);\n  }\n\n  render() {\n    // const test = this.state.data\n    // console.log(test[test.length-1].value);\n    return React.createElement(\"div\", {\n      id: \"summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(SettingsAlert, {\n      showWarning: this.state.showWarning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"charts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"line-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      width: 800,\n      height: 400,\n      data: this.state.data,\n      range: [0, 3],\n      title: 'Overall Energy Consumption',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"donut-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(DonutChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(\"h2\", {\n      className: \"headline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Temperature Status\"), React.createElement(\"div\", {\n      id: \"rooms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"room\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Kitchen\", React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Temperature: \", this.props.kitchenCurrentTemp), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Status:cooling\")), React.createElement(\"div\", {\n      className: \"room\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Bedroom\", React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Temperature: 26\\xB0F \"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Status:cooling\")), React.createElement(\"div\", {\n      className: \"room\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Living Room\", React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Temperature: 26C\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Status:cooling\")), React.createElement(\"div\", {\n      className: \"room\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Bathroom\", React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Temperature: 26C\"), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Status:cooling\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    livingroomCurrentTemp: state.temperature.livingroomCurrentTemp,\n    bedroomCurrentTemp: state.temperature.bedroomCurrentTemp,\n    bathroomCurrentTemp: state.temperature.bathroomCurrentTemp,\n    kitchenCurrentTemp: state.temperature.kitchenCurrentTemp\n  };\n};\n\nexport default connect(mapStateToProps)(Summary);","map":{"version":3,"sources":["/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/Summary/Summary.js"],"names":["React","Component","LineChart","DonutChart","makeData","SettingsAlert","connect","Summary","constructor","props","state","data","showWarning","componentWillMount","setState","loadData","setInterval","componentWillUnmount","clearInterval","render","kitchenCurrentTemp","mapStateToProps","livingroomCurrentTemp","temperature","bedroomCurrentTemp","bathroomCurrentTemp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport LineChart from '../LineChart/LineChart';\nimport DonutChart from '../DonutChart/DonutChart';\nimport {makeData} from '../Utility/DataHandling';\nimport './summary.css';\nimport {SettingsAlert} from '../Utility/Alert';\nimport { connect } from 'http2';\n\n\nclass Summary extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      data:{},\n      showWarning:false\n    }\n  }\n\n\n  componentWillMount(){\n    this.setState({\n      data:makeData(1.5,0.2)\n    })\n\n    this.loadData = setInterval(() => {\n      const data = makeData(1.5,0.2);\n      this.setState({\n        data:data\n      })\n    }, 1000);\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.loadData);\n  }\n\n  render() {\n    // const test = this.state.data\n    // console.log(test[test.length-1].value);\n\n    return (\n      <div id='summary'>\n            <SettingsAlert showWarning={this.state.showWarning}/>\n            <div id='charts'>\n              <div id=\"line-chart\">\n                <LineChart\n                    width={800} \n                    height={400}\n                    data = {this.state.data}\n                    range={[0,3]}\n                    title={'Overall Energy Consumption'}\n                />\n              </div>\n              <div id='donut-chart'><DonutChart /></div>\n            </div>\n\n            <h2 className='headline'>Temperature Status</h2>\n            <div id='rooms'>\n              <div className='room'>\n                Kitchen\n                <h5>Temperature: {this.props.kitchenCurrentTemp}</h5>\n                <h6>Status:cooling</h6>\n              </div>\n\n              <div className='room'>\n                Bedroom\n                <h5>Temperature: 26°F </h5>\n                <h6>Status:cooling</h6>\n              </div>\n              <div className='room'>\n                Living Room\n                <h5>Temperature: 26C</h5>\n                <h6>Status:cooling</h6>\n              </div>\n              <div className='room'>\n                Bathroom\n                <h5>Temperature: 26C</h5>\n                <h6>Status:cooling</h6>\n              </div>\n\n            </div>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps=state=>{\n  return{\n    livingroomCurrentTemp:state.temperature.livingroomCurrentTemp,\n    bedroomCurrentTemp:state.temperature.bedroomCurrentTemp,\n    bathroomCurrentTemp:state.temperature.bathroomCurrentTemp,\n    kitchenCurrentTemp:state.temperature.kitchenCurrentTemp\n  }\n}\n\nexport default connect(mapStateToProps)(Summary);"]},"metadata":{},"sourceType":"module"}