{"ast":null,"code":"var _jsxFileName = \"/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/Utility/TemperatureForm.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { setBedroomTemp, setBathroomTemp, setKitchenTemp, setLivingroomTemp } from '../store/actions/temperatureSettingAction';\nimport './temconfig.css';\n\nconst TemperatureForm = ({\n  roomName,\n  bathroomTemperature,\n  livingroomTemperature,\n  bedroomTemperature,\n  kitchenTemperature,\n  setBedroomTemp,\n  setBathroomTemp,\n  setKitchenTemp,\n  setLivingroomTemp\n}) => {\n  console.log(kitchenTemperature);\n  console.log(livingroomTemperature);\n  const room = roomName.roomName;\n\n  const temp = function () {\n    if (room === \"kitchen\") return kitchenTemperature;else if (room === \"livingroom\") return livingroomTemperature;else if (room === \"bedroom\") return bedroomTemperature;else return bathroomTemperature;\n  }();\n\n  console.log(temp);\n  return React.createElement(\"form\", {\n    className: \"temperature-form\",\n    onSubmit: e => {\n      e.preventDefault();\n\n      switch (room) {\n        case \"kitchen\":\n          {\n            setKitchenTemp(e.target[0].value);\n            break;\n          }\n\n        case \"livingroom\":\n          {\n            setLivingroomTemp(e.target[0].value);\n            break;\n          }\n\n        case \"bedroom\":\n          {\n            setBedroomTemp(e.target[0].value);\n            break;\n          }\n\n        case \"bathroom\":\n          {\n            setBathroomTemp(e.target[0].value);\n            break;\n          }\n\n        default:\n          {\n            break;\n          }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Current temperature in \", room, \": \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Temperature set as: \", temp, \" \"), React.createElement(\"label\", {\n    htmlFor: \"temperature\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Set Temperature: \"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"temperature\",\n    name: \"temperature\",\n    placeholder: \"Enter New Temperature..\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    id: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => {\n  console.log(state.temperature.kitchenTemperature);\n  return {\n    bathroomTemperature: state.temperature.bathroomTemperature,\n    livingroomTemperature: state.temperature.livingroomTemperature,\n    bedroomTemperature: state.temperature.bedroomTemperature,\n    kitchenTemperature: state.temperature.kitchenTemperature\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setBedroomTemp,\n  setBathroomTemp,\n  setKitchenTemp,\n  setLivingroomTemp\n})(TemperatureForm);","map":{"version":3,"sources":["/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/Utility/TemperatureForm.js"],"names":["React","connect","setBedroomTemp","setBathroomTemp","setKitchenTemp","setLivingroomTemp","TemperatureForm","roomName","bathroomTemperature","livingroomTemperature","bedroomTemperature","kitchenTemperature","console","log","room","temp","e","preventDefault","target","value","mapStateToProps","state","temperature"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport {setBedroomTemp, setBathroomTemp,setKitchenTemp,setLivingroomTemp} from '../store/actions/temperatureSettingAction';\nimport './temconfig.css';\n\n\nconst TemperatureForm=(\n        {\n        roomName,\n        bathroomTemperature,\n        livingroomTemperature,\n        bedroomTemperature,\n        kitchenTemperature,\n        setBedroomTemp, \n        setBathroomTemp,\n        setKitchenTemp,\n        setLivingroomTemp}\n        )=>{\n            console.log(kitchenTemperature);\n            console.log(livingroomTemperature);\n    const room = roomName.roomName;\n    const temp =(function(){\n        if(room===\"kitchen\") return kitchenTemperature;\n        else if(room===\"livingroom\") return livingroomTemperature;\n        else if(room===\"bedroom\") return bedroomTemperature;\n        else return bathroomTemperature;\n    })();\n    console.log(temp);\n\n    return(\n        <form \n            className='temperature-form' \n            onSubmit={\n                (e)=>{\n                    e.preventDefault();\n                    switch(room){\n                        case \"kitchen\":{\n                            setKitchenTemp(e.target[0].value);\n                            break;\n                        }\n                        case \"livingroom\":{\n                            setLivingroomTemp(e.target[0].value);\n                            break;\n                        }\n                        case \"bedroom\":{\n                            setBedroomTemp(e.target[0].value);\n                            break;\n                        }\n                        case \"bathroom\":{\n                            setBathroomTemp(e.target[0].value);\n                            break;\n                        }\n                        default:{\n                            break;\n                        }\n                    }\n                }\n        }>\n            <h3>Current temperature in {room}: </h3>\n            <h3>Temperature set as: {temp} </h3>\n            <label htmlFor=\"temperature\">Set Temperature: </label>\n            <input type=\"text\" id=\"temperature\" name=\"temperature\" placeholder=\"Enter New Temperature..\"/>\n            <input type=\"submit\" id=\"submit\" value=\"Submit\"/>\n        </form>\n    )\n}\n\nconst mapStateToProps=state=>{\n    console.log(state.temperature.kitchenTemperature);\n    \n    return{\n        bathroomTemperature: state.temperature.bathroomTemperature,\n        livingroomTemperature: state.temperature.livingroomTemperature,\n        bedroomTemperature: state.temperature.bedroomTemperature,\n        kitchenTemperature: state.temperature.kitchenTemperature\n    }\n};\n\nexport default connect( mapStateToProps,{setBedroomTemp, setBathroomTemp,setKitchenTemp,setLivingroomTemp})(TemperatureForm);"]},"metadata":{},"sourceType":"module"}