{"ast":null,"code":"var _jsxFileName = \"/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/Utility/TemperatureForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { setBedroomTemp, setBathroomTemp, setKitchenTemp, setLivingroomTemp } from '../store/actions/temperatureSettingAction';\nimport './utility.css'; // import { useAlert,Provider as AlertProvider } from 'react-alert';\n\nclass TemperatureForm extends Component {\n  constructor(props) {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (!Number.isNaN(parseInt(e.target[0].value)) && parseInt(e.target[0].value) >= 60 && parseInt(e.target[0].value) <= 90) {\n        switch (this.props.roomName) {\n          case \"kitchen\":\n            {\n              this.props.setKitchenTemp(e.target[0].value);\n              alert(\"Set temperature successful!\");\n              break;\n            }\n\n          case \"livingroom\":\n            {\n              this.props.setLivingroomTemp(e.target[0].value);\n              alert(\"Set temperature successful!\");\n              break;\n            }\n\n          case \"bedroom\":\n            {\n              this.props.setBedroomTemp(e.target[0].value);\n              alert(\"Set temperature successful!\");\n              break;\n            }\n\n          case \"bathroom\":\n            {\n              this.props.setBathroomTemp(e.target[0].value);\n              alert(\"Set temperature successful!\");\n              break;\n            }\n\n          default:\n            {\n              break;\n            }\n        }\n\n        this.setState({\n          error: \"\"\n        });\n      } else if (Number.isNaN(parseInt(e.target[0].value))) {\n        this.setState({\n          error: \"Invalid input. Please enter a number\"\n        });\n      } else if (parseInt(e.target[0].value) < 60 || parseInt(e.target[0].value) > 90) {\n        this.setState({\n          error: \"Please enter a number between 60-90\"\n        });\n      }\n    };\n\n    this.state = {\n      error: \"\"\n    };\n  } // alert = useAlert()\n\n\n  render() {\n    const _this$props = this.props,\n          roomName = _this$props.roomName,\n          bathroomTemperature = _this$props.bathroomTemperature,\n          livingroomTemperature = _this$props.livingroomTemperature,\n          bedroomTemperature = _this$props.bedroomTemperature,\n          kitchenTemperature = _this$props.kitchenTemperature;\n\n    var temp = function () {\n      if (roomName === \"kitchen\") return kitchenTemperature;\n      if (roomName === \"livingroom\") return livingroomTemperature;\n      if (roomName === \"bedroom\") return bedroomTemperature;\n      if (roomName === \"bathroom\") return bathroomTemperature;\n    }();\n\n    temp = typeof temp === \"number\" ? temp : temp.temperature;\n    return React.createElement(\"form\", {\n      className: \"temperature-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Current temperature in \", roomName, \":  \\xB0F \"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Temperature set as: \", temp, \"\\xB0F \"), React.createElement(\"label\", {\n      htmlFor: \"temperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Set Temperature: \"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"temperature\",\n      name: \"temperature\",\n      placeholder: \"Enter New Temperature..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.error));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    kitchenTemperature: state.temperature.kitchenTemperature,\n    livingroomTemperature: state.temperature.livingroomTemperature,\n    bedroomTemperature: state.temperature.bedroomTemperature,\n    bathroomTemperature: state.temperature.bathroomTemperature\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setBedroomTemp,\n  setBathroomTemp,\n  setKitchenTemp,\n  setLivingroomTemp\n})(TemperatureForm);","map":{"version":3,"sources":["/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/Utility/TemperatureForm.js"],"names":["React","Component","connect","setBedroomTemp","setBathroomTemp","setKitchenTemp","setLivingroomTemp","TemperatureForm","constructor","props","handleSubmit","e","preventDefault","Number","isNaN","parseInt","target","value","roomName","alert","setState","error","state","render","bathroomTemperature","livingroomTemperature","bedroomTemperature","kitchenTemperature","temp","temperature","color","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport {setBedroomTemp, setBathroomTemp,setKitchenTemp,setLivingroomTemp} from '../store/actions/temperatureSettingAction';\nimport './utility.css';\n// import { useAlert,Provider as AlertProvider } from 'react-alert';\n\n\nclass TemperatureForm extends Component {\n\n    constructor(props){\n        super();\n        this.state={\n            error:\"\"\n        }\n    }\n\n    // alert = useAlert()\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        if(!Number.isNaN(parseInt(e.target[0].value))&&parseInt(e.target[0].value)>=60&&parseInt(e.target[0].value)<=90){\n            switch(this.props.roomName){\n                case \"kitchen\":{\n                    this.props.setKitchenTemp(e.target[0].value);\n                    alert(\"Set temperature successful!\");\n                    break;\n                }\n                case \"livingroom\":{\n                    this.props.setLivingroomTemp(e.target[0].value);\n                    alert(\"Set temperature successful!\");\n                    break;\n                }\n                case \"bedroom\":{\n                    this.props.setBedroomTemp(e.target[0].value);\n                    alert(\"Set temperature successful!\");\n                    break;\n                }\n                case \"bathroom\":{\n                    this.props.setBathroomTemp(e.target[0].value);\n                    alert(\"Set temperature successful!\");\n                    break;\n                }\n                default:{\n                    break;\n                }\n            }\n            this.setState({\n                error:\"\"\n            })\n        }else if(Number.isNaN(parseInt(e.target[0].value))){\n            this.setState({\n                error:\"Invalid input. Please enter a number\"\n            })\n        }else if(parseInt(e.target[0].value)<60||parseInt(e.target[0].value)>90){\n            this.setState({\n                error:\"Please enter a number between 60-90\"\n            })\n        }\n    }\n\n    \n  render() {\n    const {\n        roomName,\n        bathroomTemperature,\n        livingroomTemperature,\n        bedroomTemperature,\n        kitchenTemperature,} = this.props;\n\n\n        var temp =(function(){\n            if(roomName===\"kitchen\") return kitchenTemperature;\n            if(roomName===\"livingroom\") return livingroomTemperature;\n            if(roomName===\"bedroom\") return bedroomTemperature;\n            if(roomName===\"bathroom\")return bathroomTemperature;\n        })();\n    \n        temp = typeof temp === \"number\"? temp: temp.temperature;\n    \n        return(\n            <form \n                className='temperature-form' \n                onSubmit={this.handleSubmit}>\n                <h5>Current temperature in {roomName}:  °F </h5>\n                <h5>Temperature set as: {temp}°F </h5>\n                <label htmlFor=\"temperature\">Set Temperature: </label>\n                <input type=\"text\" id=\"temperature\" name=\"temperature\" placeholder=\"Enter New Temperature..\"/>\n                <input type=\"submit\" id=\"submit\" value=\"Submit\"/>\n                <br/>\n                <span style={{color:\"red\"}}>{this.state.error}</span>\n            </form>\n\n        )\n  }\n}\n\n\nconst mapStateToProps=state=>{\n    return{\n        kitchenTemperature: state.temperature.kitchenTemperature,\n        livingroomTemperature: state.temperature.livingroomTemperature,\n        bedroomTemperature: state.temperature.bedroomTemperature,\n        bathroomTemperature: state.temperature.bathroomTemperature\n\n    }\n};\n\nexport default connect( mapStateToProps,{setBedroomTemp, setBathroomTemp,setKitchenTemp,setLivingroomTemp})(TemperatureForm);"]},"metadata":{},"sourceType":"module"}