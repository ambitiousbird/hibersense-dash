{"ast":null,"code":"var _jsxFileName = \"/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/DonutChart/DonutChart.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport Donut3D from './Donut3D';\nconst salesData = [{\n  label: \"Basic\",\n  color: \"#3366CC\"\n}, {\n  label: \"Plus\",\n  color: \"#DC3912\"\n}, {\n  label: \"Lite\",\n  color: \"#FF9900\"\n}, {\n  label: \"Elite\",\n  color: \"#109618\"\n}, {\n  label: \"Delux\",\n  color: \"#990099\"\n}];\n\nconst changeData = () => {\n  Donut3D.transition(\"salesDonut\", randomData(), 130, 100, 30, 0.4);\n  Donut3D.transition(\"quotesDonut\", randomData(), 130, 100, 30, 0);\n};\n\nconst randomData = () => {\n  return salesData.map(function (d) {\n    return {\n      label: d.label,\n      value: 1000 * Math.random(),\n      color: d.color\n    };\n  });\n};\n\nexport default class componentName extends Component {\n  componentDidMount() {\n    var svg = d3.select(\"body\").append(\"svg\").attr(\"width\", 700).attr(\"height\", 300);\n    svg.append(\"g\").attr(\"id\", \"salesDonut\");\n    svg.append(\"g\").attr(\"id\", \"quotesDonut\");\n    Donut3D.draw(\"salesDonut\", randomData(), 150, 150, 130, 100, 30, 0.4);\n    Donut3D.draw(\"quotesDonut\", randomData(), 450, 150, 130, 100, 30, 0);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: \"changeData()\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Change Data\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/DonutChart/DonutChart.js"],"names":["React","Component","d3","Donut3D","salesData","label","color","changeData","transition","randomData","map","d","value","Math","random","componentName","componentDidMount","svg","select","append","attr","draw","render"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,MAAMC,SAAS,GAAC,CACf;AAACC,EAAAA,KAAK,EAAC,OAAP;AAAgBC,EAAAA,KAAK,EAAC;AAAtB,CADe,EAEf;AAACD,EAAAA,KAAK,EAAC,MAAP;AAAeC,EAAAA,KAAK,EAAC;AAArB,CAFe,EAGf;AAACD,EAAAA,KAAK,EAAC,MAAP;AAAeC,EAAAA,KAAK,EAAC;AAArB,CAHe,EAIf;AAACD,EAAAA,KAAK,EAAC,OAAP;AAAgBC,EAAAA,KAAK,EAAC;AAAtB,CAJe,EAKf;AAACD,EAAAA,KAAK,EAAC,OAAP;AAAgBC,EAAAA,KAAK,EAAC;AAAtB,CALe,CAAhB;;AAQA,MAAMC,UAAU,GAAC,MAAI;AACjBJ,EAAAA,OAAO,CAACK,UAAR,CAAmB,YAAnB,EAAiCC,UAAU,EAA3C,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,EAAzD,EAA6D,GAA7D;AACAN,EAAAA,OAAO,CAACK,UAAR,CAAmB,aAAnB,EAAkCC,UAAU,EAA5C,EAAgD,GAAhD,EAAqD,GAArD,EAA0D,EAA1D,EAA8D,CAA9D;AACH,CAHD;;AAKA,MAAMA,UAAU,GAAC,MAAI;AACjB,SAAOL,SAAS,CAACM,GAAV,CAAc,UAASC,CAAT,EAAW;AAC5B,WAAO;AAACN,MAAAA,KAAK,EAACM,CAAC,CAACN,KAAT;AAAgBO,MAAAA,KAAK,EAAC,OAAKC,IAAI,CAACC,MAAL,EAA3B;AAA0CR,MAAAA,KAAK,EAACK,CAAC,CAACL;AAAlD,KAAP;AAAiE,GAD9D,CAAP;AAEH,CAHD;;AAOA,eAAe,MAAMS,aAAN,SAA4Bd,SAA5B,CAAsC;AAEjDe,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,GAAG,GAAGf,EAAE,CAACgB,MAAH,CAAU,MAAV,EAAkBC,MAAlB,CAAyB,KAAzB,EAAgCC,IAAhC,CAAqC,OAArC,EAA6C,GAA7C,EAAkDA,IAAlD,CAAuD,QAAvD,EAAgE,GAAhE,CAAV;AAEAH,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,IAArB,EAA0B,YAA1B;AACAH,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,IAArB,EAA0B,aAA1B;AAEAjB,IAAAA,OAAO,CAACkB,IAAR,CAAa,YAAb,EAA2BZ,UAAU,EAArC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,EAA7D,EAAiE,GAAjE;AACAN,IAAAA,OAAO,CAACkB,IAAR,CAAa,aAAb,EAA4BZ,UAAU,EAAtC,EAA0C,GAA1C,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD,EAA8D,EAA9D,EAAkE,CAAlE;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAKD;;AAlBgD","sourcesContent":["\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport Donut3D from './Donut3D';\n\nconst salesData=[\n\t{label:\"Basic\", color:\"#3366CC\"},\n\t{label:\"Plus\", color:\"#DC3912\"},\n\t{label:\"Lite\", color:\"#FF9900\"},\n\t{label:\"Elite\", color:\"#109618\"},\n\t{label:\"Delux\", color:\"#990099\"}\n];\n\nconst changeData=()=>{\n    Donut3D.transition(\"salesDonut\", randomData(), 130, 100, 30, 0.4);\n    Donut3D.transition(\"quotesDonut\", randomData(), 130, 100, 30, 0);\n}\n\nconst randomData=()=>{\n    return salesData.map(function(d){ \n        return {label:d.label, value:1000*Math.random(), color:d.color};});\n}\n\n\n\nexport default class componentName extends Component {\n    \n    componentDidMount() {\n        var svg = d3.select(\"body\").append(\"svg\").attr(\"width\",700).attr(\"height\",300);\n    \n        svg.append(\"g\").attr(\"id\",\"salesDonut\");\n        svg.append(\"g\").attr(\"id\",\"quotesDonut\");\n    \n        Donut3D.draw(\"salesDonut\", randomData(), 150, 150, 130, 100, 30, 0.4);\n        Donut3D.draw(\"quotesDonut\", randomData(), 450, 150, 130, 100, 30, 0);\n    };\n\n    render() {\n      return (\n        <div>\n          <button onClick=\"changeData()\">Change Data</button>\n        </div>\n      )\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}