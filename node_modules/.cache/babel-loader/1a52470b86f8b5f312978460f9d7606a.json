{"ast":null,"code":"var _jsxFileName = \"/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/Summary/Summary.js\";\nimport React, { Component } from 'react';\nimport LineChart from '../LineChart/LineChart';\nimport DonutChart from '../DonutChart/DonutChart';\nimport { makeData } from '../Utility/DataHandling';\nimport './summary.css';\nimport { SettingsAlert } from '../Utility/Alert';\nimport { connect } from 'react-redux';\nimport Room from '../Rooms/Room';\n\nclass Summary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {},\n      showWarning: false\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      data: makeData(1.5, 0.2)\n    });\n    this.loadData = setInterval(() => {\n      const data = makeData(1.5, 0.2);\n      this.setState({\n        data: data\n      });\n    }, 1000);\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          kitchenTemperature = _this$props.kitchenTemperature,\n          livingroomTemperature = _this$props.livingroomTemperature,\n          bathroomTemperature = _this$props.bathroomTemperature,\n          bedroomTemperature = _this$props.bedroomTemperature,\n          kitchenCurrentTemp = _this$props.kitchenCurrentTemp,\n          bedroomCurrentTemp = _this$props.bedroomCurrentTemp,\n          bathroomCurrentTemp = _this$props.bathroomCurrentTemp,\n          livingroomCurrentTemp = _this$props.livingroomCurrentTemp;\n    console.log(\"kitchenTemperature\", kitchenTemperature); // var tempTarget = typeof kitchenTemperature === \"number\"? kitchenTemperature: kitchenTemperature.temperature;\n    // var currentTemp = typeof kitchenCurrentTemp === \"number\"? kitchenCurrentTemp: kitchenCurrentTemp.temperature;\n    // const tempDiff = tempTarget - currentTemp;\n    // console.log(\"tempDiff\",tempDiff);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.loadData);\n  }\n\n  render() {\n    // const test = this.state.data\n    // console.log(test[test.length-1].value);\n    return React.createElement(\"div\", {\n      id: \"summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(SettingsAlert, {\n      showWarning: this.state.showWarning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"charts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"line-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(LineChart, {\n      width: 800,\n      height: 400,\n      data: this.state.data,\n      range: [0, 3],\n      title: 'Overall Energy Consumption',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"donut-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(DonutChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"status-summary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"headline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Temperature Status\"), React.createElement(Room, {\n      roomName: \"Kitchen\",\n      type: \"temperature\",\n      showChart: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Room, {\n      roomName: \"Bedroom\",\n      type: \"temperature\",\n      showChart: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Room, {\n      roomName: \"Livingroom\",\n      type: \"temperature\",\n      showChart: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Room, {\n      roomName: \"Bathroom\",\n      type: \"temperature\",\n      showChart: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    livingroomCurrentTemp: state.temperature.livingroomCurrentTemp,\n    bedroomCurrentTemp: state.temperature.bedroomCurrentTemp,\n    bathroomCurrentTemp: state.temperature.bathroomCurrentTemp,\n    kitchenCurrentTemp: state.temperature.kitchenCurrentTemp\n  };\n};\n\nexport default connect(mapStateToProps)(Summary);","map":{"version":3,"sources":["/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/Summary/Summary.js"],"names":["React","Component","LineChart","DonutChart","makeData","SettingsAlert","connect","Room","Summary","constructor","props","state","data","showWarning","componentWillMount","setState","loadData","setInterval","componentDidMount","kitchenTemperature","livingroomTemperature","bathroomTemperature","bedroomTemperature","kitchenCurrentTemp","bedroomCurrentTemp","bathroomCurrentTemp","livingroomCurrentTemp","console","log","componentWillUnmount","clearInterval","render","mapStateToProps","temperature"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport LineChart from '../LineChart/LineChart';\nimport DonutChart from '../DonutChart/DonutChart';\nimport {makeData} from '../Utility/DataHandling';\nimport './summary.css';\nimport {SettingsAlert} from '../Utility/Alert';\nimport { connect } from 'react-redux';\nimport Room from '../Rooms/Room';\n\n\nclass Summary extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      data:{},\n      showWarning:false\n    }\n  }\n\n\n  componentWillMount(){\n    this.setState({\n      data:makeData(1.5,0.2)\n    })\n\n    this.loadData = setInterval(() => {\n      const data = makeData(1.5,0.2);\n      this.setState({\n        data:data\n      })\n    }, 1000);\n  }\n\n  componentDidMount(){\n    const {\n      kitchenTemperature,\n      livingroomTemperature,\n      bathroomTemperature,\n      bedroomTemperature,\n\n      kitchenCurrentTemp,\n      bedroomCurrentTemp,\n      bathroomCurrentTemp,\n      livingroomCurrentTemp,  \n    } = this.props;\n\n    console.log(\"kitchenTemperature\",kitchenTemperature);\n\n    // var tempTarget = typeof kitchenTemperature === \"number\"? kitchenTemperature: kitchenTemperature.temperature;\n\n    // var currentTemp = typeof kitchenCurrentTemp === \"number\"? kitchenCurrentTemp: kitchenCurrentTemp.temperature;\n\n    // const tempDiff = tempTarget - currentTemp;\n    // console.log(\"tempDiff\",tempDiff);\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.loadData);\n  }\n\n\n\n  render() {\n    // const test = this.state.data\n    // console.log(test[test.length-1].value);\n\n    return (\n      <div id='summary'>\n            <SettingsAlert showWarning={this.state.showWarning}/>\n            <div id='charts'>\n              <div id=\"line-chart\">\n                <LineChart\n                    width={800} \n                    height={400}\n                    data = {this.state.data}\n                    range={[0,3]}\n                    title={'Overall Energy Consumption'}\n                />\n              </div>\n              <div id='donut-chart'><DonutChart /></div>\n            </div>\n\n          <div id=\"status-summary\">\n            <h2 className='headline'>Temperature Status</h2>\n            <Room roomName={\"Kitchen\"} type=\"temperature\" showChart={false}/>\n            <Room roomName={\"Bedroom\"} type=\"temperature\" showChart={false}/>\n            <Room roomName={\"Livingroom\"} type=\"temperature\" showChart={false}/>\n            <Room roomName={\"Bathroom\"} type=\"temperature\" showChart={false}/>\n          </div>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps=state=>{\n  return{\n    livingroomCurrentTemp:state.temperature.livingroomCurrentTemp,\n    bedroomCurrentTemp:state.temperature.bedroomCurrentTemp,\n    bathroomCurrentTemp:state.temperature.bathroomCurrentTemp,\n    kitchenCurrentTemp:state.temperature.kitchenCurrentTemp\n  }\n}\n\nexport default connect(mapStateToProps)(Summary);"]},"metadata":{},"sourceType":"module"}