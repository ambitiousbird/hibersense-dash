{"ast":null,"code":"import * as d3 from \"d3\";\n/*\nexport const loadAllData = (callback = () => {} ) => {\n    const q = d3.queue()\n    \n    q.defer(d3.tsv, './data.tsv', cast)\n     \n     q.await((error, data)  =>{\n        callback(data);\n    })   \n}\n*/\n//デモ用ランダムデータ生成function\n\nconst MakeData = () => {\n  const rnd = d3.randomNormal(180, 20);\n  let data = d3.range(300).map(i => {\n    return {\n      date: new Date(new Date().getTime() - 1000 * i),\n      value: rnd()\n    };\n  }).reverse();\n  return () => {\n    data.push({\n      date: new Date(),\n      value: rnd()\n    });\n    data.shift();\n    return data;\n  };\n};\n\nconst md = MakeData();\nexport const loadAllData = (callback = () => {}) => {\n  callback(md());\n};","map":{"version":3,"sources":["/Users/langgao/Documents/HiberSense Dashboard/hibersense-dash/src/components/Utility/DataHandling.js"],"names":["d3","MakeData","rnd","randomNormal","data","range","map","i","date","Date","getTime","value","reverse","push","shift","md","loadAllData","callback"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AAEA;;;;;;;;;;;AAYA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,GAAG,GAAGF,EAAE,CAACG,YAAH,CAAgB,GAAhB,EAAqB,EAArB,CAAZ;AAEA,MAAIC,IAAI,GAAGJ,EAAE,CACVK,KADQ,CACF,GADE,EAERC,GAFQ,CAEJC,CAAC,IAAI;AACR,WAAO;AAAEC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAIA,IAAJ,GAAWC,OAAX,KAAuB,OAAOH,CAAvC,CAAR;AAAmDI,MAAAA,KAAK,EAAET,GAAG;AAA7D,KAAP;AACD,GAJQ,EAKRU,OALQ,EAAX;AAOA,SAAO,MAAM;AACXR,IAAAA,IAAI,CAACS,IAAL,CAAU;AAAEL,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAAR;AAAoBE,MAAAA,KAAK,EAAET,GAAG;AAA9B,KAAV;AACAE,IAAAA,IAAI,CAACU,KAAL;AAEA,WAAOV,IAAP;AACD,GALD;AAMD,CAhBD;;AAkBA,MAAMW,EAAE,GAAGd,QAAQ,EAAnB;AAEA,OAAO,MAAMe,WAAW,GAAG,CAACC,QAAQ,GAAG,MAAM,CAAE,CAApB,KAAyB;AAClDA,EAAAA,QAAQ,CAACF,EAAE,EAAH,CAAR;AACD,CAFM","sourcesContent":["import * as d3 from \"d3\";\n\n/*\nexport const loadAllData = (callback = () => {} ) => {\n    const q = d3.queue()\n    \n    q.defer(d3.tsv, './data.tsv', cast)\n     \n     q.await((error, data)  =>{\n        callback(data);\n    })   \n}\n*/\n\n//デモ用ランダムデータ生成function\nconst MakeData = () => {\n  const rnd = d3.randomNormal(180, 20);\n\n  let data = d3\n    .range(300)\n    .map(i => {\n      return { date: new Date(new Date().getTime() - 1000 * i), value: rnd() };\n    })\n    .reverse();\n\n  return () => {\n    data.push({ date: new Date(), value: rnd() });\n    data.shift();\n\n    return data;\n  };\n};\n\nconst md = MakeData();\n\nexport const loadAllData = (callback = () => {}) => {\n  callback(md());\n};\n"]},"metadata":{},"sourceType":"module"}